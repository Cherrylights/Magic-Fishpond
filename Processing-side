import SimpleOpenNI.*;
import processing.serial.*;
import ddf.minim.*;

SimpleOpenNI kinect;
Serial myPort;
Minim minim;
AudioSnippet ghostWhispers;

int closestValue;
int closestX;
int closestY;

void setup() {
  size(640, 480);
  String portName = Serial.list()[5];
  myPort = new Serial(this, portName, 9600);
  minim = new Minim(this);
  ghostWhispers = minim.loadSnippet("ghostWhispers.wav");
  kinect = new SimpleOpenNI(this);
  kinect.enableDepth();
}

void draw() {
  closestValue = 8000;
  kinect.update();
  int[]depthValues = kinect.depthMap();
  for ( int y = 0; y<480; y++) {
    for (int x = 0; x<640; x++) {
      int i = x + y * 640;
      int currentDepthValue = depthValues[i];
      if (currentDepthValue > 0 && currentDepthValue < closestValue) {
        closestValue = currentDepthValue;
        //        the line above is the problem!!
        closestX = x;
        closestY = y;
 
 
 
      }
    }
  }
  image(kinect.depthImage(), 0, 0);
  fill(255, 0, 0);
  noStroke();
  ellipse(closestX, closestY, 20, 20);
  stroke(255, 0, 0);
  noFill();
  rectMode(CENTER);
  rect(width/2, height/2, 300, 300);
  if (closestX > width/2 - 150 && closestX < width/2 + 150 &&
    closestY > height/2 - 150 && closestY < height/2 + 150) {
    myPort.write('1');
    if (!ghostWhispers.isPlaying()) {
      ghostWhispers.play();
    }
  } else {
    myPort.write('0');
    if (ghostWhispers.isPlaying()) {
      ghostWhispers.pause();
    } else if (!ghostWhispers.isPlaying()) {
      ghostWhispers.rewind();
    }
  }
}
